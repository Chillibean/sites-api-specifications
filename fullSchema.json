{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.5",
    "title": "Sites API",
    "description": "Sites API",
    "contact": {
      "name": "ChilliPharm",
      "url": "https://www.chillipharm.com"
    }
  },
  "servers": [
    {
      "url": "http://chillipharm.test:3000/api/v1",
      "description": "Local development"
    },
    {
      "url": "https://www.chillipharm.com/api/v1",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Sites",
      "description": "Endpoints for sites"
    },
    {
      "name": "Users",
      "description": "Endpoints for site users"
    }
  ],
  "paths": {
    "/accounts/{account_id}/sites/{site_identifier}": {
      "get": {
        "summary": "Get a site for account",
        "description": "Get a site for account",
        "operationId": "getSite",
        "tags": [
          "Sites"
        ],
        "security": [
          {
            "userSessionKey": []
          },
          {
            "chillipharmSession": []
          }
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "site_identifier",
            "in": "path",
            "description": "The site identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SITE1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/accounts/{account_id}/sites/{site_identifier}/users": {
      "get": {
        "summary": "Get users for site",
        "description": "Get users for site",
        "operationId": "getSiteUsers",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "userSessionKey": []
          },
          {
            "chillipharmSession": []
          }
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "The account id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            }
          },
          {
            "name": "site_identifier",
            "in": "path",
            "description": "The site identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SITE1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteUsers"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "userSessionKey": {
        "type": "apiKey",
        "in": "cookie",
        "name": "user_session_key",
        "description": "User session key cookie"
      },
      "chillipharmSession": {
        "type": "apiKey",
        "in": "cookie",
        "name": "_chillipharm_session",
        "description": "ChilliPharm session cookie"
      }
    },
    "schemas": {
      "Error": {
        "description": "An error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Bad request. Missing or invalid input parameters."
          }
        }
      },
      "Role": {
        "description": "A user role",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The id of role",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The name of role",
            "example": "Guest"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name"
        ]
      },
      "Site": {
        "description": "A site",
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The country of site",
            "example": "GB"
          },
          "id": {
            "type": "number",
            "description": "The id of site",
            "example": 1
          },
          "identifier": {
            "type": "string",
            "description": "The identifier of site",
            "example": "SITE1"
          },
          "name": {
            "type": "string",
            "description": "The name of site",
            "example": "Site 1"
          },
          "permissions": {
            "type": "array",
            "description": "The permissions of current user for a site",
            "items": {
              "type": "string",
              "description": "The permission name",
              "example": "can_create_forms"
            }
          },
          "study_protocol": {
            "type": "object",
            "nullable": true,
            "description": "The study protocol of site",
            "additionalProperties": {
              "$ref": "#/components/schemas/StudyProtocol"
            }
          },
          "go_live_date": {
            "type": "string",
            "format": "date",
            "description": "The go live date of site",
            "example": "2020-01-01"
          },
          "is_live": {
            "type": "boolean",
            "description": "The live indicator of site",
            "example": true
          },
          "anonymised_assets": {
            "type": "boolean",
            "description": "The anonymised assets indicator of site",
            "example": true
          }
        },
        "additionalProperties": false,
        "required": [
          "country",
          "id",
          "identifier",
          "name",
          "permissions",
          "study_protocol",
          "go_live_date",
          "is_live",
          "anonymised_assets"
        ]
      },
      "SiteUser": {
        "description": "A site user",
        "type": "object",
        "properties": {
          "admin": {
            "type": "boolean",
            "description": "The admin user type indicator",
            "example": true
          },
          "email": {
            "type": "string",
            "description": "The email of site user",
            "example": "john.doe@example.com"
          },
          "first_name": {
            "type": "string",
            "description": "The first name of site user",
            "example": "John"
          },
          "id": {
            "type": "number",
            "description": "The id of site user",
            "example": 1
          },
          "last_name": {
            "type": "string",
            "description": "The last name of site user",
            "example": "Doe"
          },
          "role": {
            "type": "object",
            "nullable": true,
            "description": "The role of site user",
            "additionalProperties": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "uuid": {
            "type": "string",
            "description": "The uuid of site user",
            "example": "c40a88fc-189e-4bbf-8606-9c7b57030e21"
          }
        },
        "additionalProperties": false,
        "required": [
          "admin",
          "email",
          "first_name",
          "id",
          "last_name",
          "uuid"
        ]
      },
      "SiteUsers": {
        "description": "A collection of site users",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SiteUser"
        }
      },
      "StudyProtocol": {
        "description": "A study protocol",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The id of study protocol",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The name of study protocol",
            "example": "Alpha Protocol"
          },
          "study_event_display_name": {
            "type": "object",
            "description": "The study event display name",
            "additionalProperties": {
              "$ref": "#/components/schemas/StudyProtocolObjectName"
            }
          },
          "study_procedure_display_name": {
            "type": "object",
            "description": "The study procedure display name",
            "additionalProperties": {
              "$ref": "#/components/schemas/StudyProtocolObjectName"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "name",
          "study_event_display_name",
          "study_procedure_display_name"
        ]
      },
      "StudyProtocolObjectName": {
        "description": "A study protocol object name",
        "type": "object",
        "properties": {
          "plural": {
            "type": "string",
            "description": "The plural form of study protocol object name",
            "example": "visits"
          },
          "singular": {
            "type": "string",
            "description": "The singular form of study protocol object name",
            "example": "visit"
          }
        },
        "additionalProperties": false,
        "required": [
          "plural",
          "singular"
        ]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request. Missing or invalid input parameters.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized. Missing or invalid authentication credentials.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. The request was valid, but the server is refusing action.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "The error message",
                  "example": "You do not have sufficient permission to perform this action",
                  "enum": [
                    "You do not have sufficient permission to perform this action",
                    "Forbidden"
                  ]
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found. The requested resource was not found.",
        "content": {
          "application/json": {
            "schema": {
              "description": "An error",
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "The error message",
                  "example": "Not found",
                  "enum": [
                    "Not found"
                  ]
                }
              },
              "required": [
                "error"
              ],
              "additionalProperties": false
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict. The request could not be completed due to a conflict with the current state of the resource.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error. Please contact support.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}